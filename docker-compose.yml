version: '3'
services:
  # https://containrrr.dev/watchtower
  watchtower:
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 60
  # https://hub.docker.com/r/communityfirst/mapeo-icons
  mapeo-icons:
    image: communityfirst/mapeo-icons
    restart: always
    environment:
      VIRTUAL_HOST: ${DOMAIN_ICONS}
      LETSENCRYPT_HOST: ${DOMAIN_ICONS}
      LETSENCRYPT_EMAIL: ${EMAIL}
      ICONS_TO_DOWNLOAD: ${ICONS_TO_DOWNLOAD}
      NOUN_KEY: ${NOUN_KEY}
      NOUN_SECRET: ${NOUN_SECRET}
      VIRTUAL_PORT: 3000
      CORS: ${CORS}
  # https://hub.docker.com/r/nginxproxy/nginx-proxy
  proxy:
    build: services/nginx-proxy
    restart: always
    container_name: proxy
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${DIR}/app-data/proxy/certs:/etc/nginx/certs:ro
      - ${DIR}/app-data/proxy/vhostd:/etc/nginx/vhost.d
      - ${DIR}/app-data/proxy/html:/usr/share/nginx/html
      - ${DIR}/app-data/proxy/nginx-conf:/etc/nginx/conf.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
  # https://hub.docker.com/r/nginxproxy/acme-companion
  ssl:
    image: nginxproxy/acme-companion:latest
    restart: always
    container_name: ssl
    environment:
      NGINX_PROXY_CONTAINER: proxy
      DEFAULT_EMAIL: ${EMAIL}
    volumes:
      - ${DIR}/app-data/proxy/certs:/etc/nginx/certs
      - ${DIR}/app-data/proxy/vhostd:/etc/nginx/vhost.d
      - ${DIR}/app-data/proxy/html:/usr/share/nginx/html
      - ${DIR}/app-data/proxy/acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
  # https://hub.docker.com/_/httpd
  fdroid-repo:
    image: httpd:latest
    restart: always
    volumes:
      -  ${DIR}/content/fdroid-repository:/usr/local/apache2/htdocs/
    environment:
      VIRTUAL_HOST: ${DOMAIN_FDROID}
      LETSENCRYPT_HOST: ${DOMAIN_FDROID}
      LETSENCRYPT_EMAIL: ${EMAIL}
  # https://filebrowser.org
  filebrowser:
    image: filebrowser/filebrowser
    restart: always
    volumes:
      - ${DIR}:/srv
      - ${DIR}/app-data/filebrowser/database.db:/database.db
      - ${DIR}/app-data/filebrowser/config.json:/config.json
    user: "${PUID}:${PGID}"
    environment:
      VIRTUAL_HOST: ${DOMAIN_FILEBROWSER}
      LETSENCRYPT_HOST: ${DOMAIN_FILEBROWSER}
      LETSENCRYPT_EMAIL: ${EMAIL}
  # https://hub.docker.com/r/minio/minio/
  minio:
    image: minio/minio
    restart: always
    dns:
      - 8.8.8.8
    ports:
      - 9000:9000
    volumes:
      - ${DIR}/content/:/data
    environment:
      VIRTUAL_HOST: ${DOMAIN_MINIO}
      LETSENCRYPT_HOST: ${DOMAIN_MINIO}
      LETSENCRYPT_EMAIL: ${EMAIL}
      VIRTUAL_PORT: 9001
      MINIO_ROOT_USER: ${ADMIN_MINIO}
      MINIO_ROOT_PASSWORD: ${PASSWORD_MINIO}
      # MINIO_BROWSER_REDIRECT_URL: https://[CI_CD_DOMAIN]
      # MINIO_SERVER_URL: https://[CI_CD_DOMAIN]:34256 
    command: server --address ":9000" --console-address ":9001" /data
  # https://hub.docker.com/r/linuxserver/syncthing/
  syncthing:
    image: lscr.io/linuxserver/syncthing
    restart: always
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      VIRTUAL_HOST: ${DOMAIN_SYNCTHING}
      LETSENCRYPT_HOST: ${DOMAIN_SYNCTHING}
      LETSENCRYPT_EMAIL: ${EMAIL}
      VIRTUAL_PORT: 8384
      TZ: America/Brasil
    volumes:
      - ${DIR}/app-data/syncthing:/config
      - ${DIR}/content:/data
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
  # https://hub.docker.com/_/httpd
  releases:
    build: services/releases
    volumes:
      - ${DIR}/app-data/releases:/usr/local/apache2/htdocs
    environment:
      VIRTUAL_HOST: ${DOMAIN_RELEASES}
      LETSENCRYPT_HOST: ${DOMAIN_RELEASES}
      LETSENCRYPT_EMAIL: ${EMAIL}
  # https://github.com/webrecorder/browsertrix-crawler
  crawler:
    build: services/crawler
    restart: on-failure
    volumes:
        - ${DIR}/app-data/crawls:/crawls/
        - ${DIR}/content:/app/content
    environment:
      VIRTUAL_HOST: ${DOMAIN_CRAWLER}
      LETSENCRYPT_HOST: ${DOMAIN_CRAWLER}
      LETSENCRYPT_EMAIL: ${EMAIL}
      VIRTUAL_PORT: 8080
      CRAWL_TIMER: ${CRAWL_TIMER}
  # https://docs.portainer.io
  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - 8082:9443
      - 8000:8000
    environment:
      VIRTUAL_HOST: ${DOMAIN_PORTAINER}
      LETSENCRYPT_HOST: ${DOMAIN_PORTAINER}
      LETSENCRYPT_EMAIL: ${EMAIL}
      VIRTUAL_PORT: 9000
    volumes:
        - ${DIR}/app-data/portainer:/data
        - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
  # https://github.com/ConservationMetrics/mbgl-tile-renderer
  tile-renderer-api:
    image: communityfirst/mbgl-tile-renderer:main
    environment:
      VIRTUAL_HOST: ${DOMAIN_TILE_RENDERER_API}
      LETSENCRYPT_HOST: ${DOMAIN_TILE_RENDERER_API}
      LETSENCRYPT_EMAIL: ${EMAIL}
    volumes:
        - ${DIR}/content/partners:/app/outputs
    restart: unless-stopped
    command: server
  # ui
  # tile-renderer-ui:
  #   image: communityfirst/tile-renderer-ui
  #   environment:
  #     VIRTUAL_HOST: ${DOMAIN_TILE_RENDERER}
  #     LETSENCRYPT_HOST: ${DOMAIN_TILE_RENDERER}
  #     LETSENCRYPT_EMAIL: ${EMAIL}
  #     API_DOMAIN: ${DOMAIN_TILE_RENDERER_API}
  #   restart: unless-stopped
  # https://github.com/digidem/mapeo-config-editor-v2
  mapeo-config-editor:
    image: communityfirst/mapeo-config-editor
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: ${DOMAIN_MAPEO_EDITOR}
      LETSENCRYPT_HOST: ${DOMAIN_MAPEO_EDITOR}
      LETSENCRYPT_EMAIL: ${EMAIL}
      VIRTUAL_PORT: 3000
    volumes:
        - ${DIR}/app-data/mapeo-config-editor:/tmp/uploads
  statusnook:
    image: goksan/statusnook
    environment:
      VIRTUAL_HOST: ${DOMAIN_STATUSNOOK}
      LETSENCRYPT_HOST: ${DOMAIN_STATUSNOOK}
      LETSENCRYPT_EMAIL: ${EMAIL}
      VIRTUAL_PORT: 8999
    ports:
      - 127.0.0.1:8999:8000

    volumes:
      - ${DIR}/app-data/statusnook:/app/statusnook-data
    restart: always

  # OpenDroneMap
  db:
    image: opendronemap/webodm_db
    container_name: db
    ports:
      - "5432:5432"
    volumes:
      - ${DIR}/app-data/webodm_db:/var/lib/postgresql/data:Z
    restart: unless-stopped
    oom_score_adj: -100
  webapp:
    image: opendronemap/webodm_webapp
    container_name: webapp
    entrypoint: /bin/bash -c "chmod +x /webodm/*.sh && /bin/bash -c \"/webodm/wait-for-postgres.sh db /webodm/wait-for-it.sh -t 0 broker:6379 -- /webodm/start.sh\""
    volumes:
      - ${DIR}/app-data/webodm_webapp:/webodm/app/media:z
    ports:
      - "7000:8000"
    depends_on:
      - db
      - broker
      - worker
    # environment:
    #   VIRTUAL_HOST: ${DOMAIN_ODM}
    #   LETSENCRYPT_HOST: ${DOMAIN_ODM}
    #   LETSENCRYPT_EMAIL: ${EMAIL}
    #   VIRTUAL_PORT: 8000
    #   WO_PORT: ${WO_PORT}
    #   WO_HOST: ${WO_HOST}
    #   WO_DEBUG: ${WO_DEBUG}
    #   WO_BROKER: ${WO_BROKER}
    #   WO_DEV: ${WO_DEV}
    #   WO_DEV_WATCH_PLUGINS: ${WO_DEV_WATCH_PLUGINS}
    #   WO_SECRET_KEY: ${WO_SECRET_KEY}
    restart: unless-stopped
    oom_score_adj: 0
  broker:
    image: redis:7.0.10
    container_name: broker
    restart: unless-stopped
    oom_score_adj: -500
  worker:
    image: opendronemap/webodm_webapp
    container_name: worker
    entrypoint: /bin/bash -c "/webodm/wait-for-postgres.sh db /webodm/wait-for-it.sh -t 0 broker:6379 -- /webodm/wait-for-it.sh -t 0 webapp:8000 -- /webodm/worker.sh start"
    volumes:
      - ${DIR}/app-data/webodm_worker:/webodm/app/media:z
    depends_on:
      - db
      - broker
    environment:
      - WO_BROKER
      - WO_DEBUG
      - WO_SECRET_KEY
    restart: unless-stopped
    oom_score_adj: 250
